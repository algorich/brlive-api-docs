FORMAT: 1A
HOST: http://brlive.herokuapp.com/api/v3

# BrLive

API para integração dos aplicativos BrLive - Atleta e BrLive - Organizador com o BrLive Web.

A API tem 5 "root" endpoints:

- Events (public)
- Events (private)
- Enrollments
- Entries
- Athletes

E diversos outros endpoints alinhados aos supracitados. Por fim, **todas** as rotas da API são:

```
GET  /api/v3/events/:event_id/results
GET  /api/v3/events/:event_id/results/:id
GET  /api/v3/user/events/:event_id/enrollments
GET  /api/v3/user/events
GET  /api/v3/user/events/:id
GET  /api/v3/user/enrollments/:enrollment_id/versions
GET  /api/v3/user/enrollments/:enrollment_id/notifications
POST /api/v3/user/enrollments/:enrollment_id/change_requests
GET  /api/v3/user/enrollments/:id
POST /api/v3/user/entries/:entry_id/transfers
GET  /api/v3/user/athlete
POST /api/v3/user/athletes/:athlete_id/change_requests
GET  /api/v3/user/athletes/:id
```

# Group Atletas
Essa seção agrupa requisições do recurso **Atleta**


## Atleta [/user/athletes/{id}]

+ Parameters
    + id: `1` (string) - O id do Atleta.

+ Model (application/json)

    ```js
    {
      "data": {
        "id": "1",
        "type": "athletes",
        "attributes": {
          "name": "Rafael Carvalho",
          "gender": "M",
          "birthday": "1993-08-24",
          "document": "123.123.123-12",
          "phone": "22993214823",
          "avatar": "http://placehold.it/300x300",
          "avatar-from-central": "true"
        },
        "links": {
          "self": {
            "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user"
          }
        }
      }
    }
    ```


### Ver um atleta [GET]
Retorna um atleta específico.

+ Response 200

    [Atleta][]


## Atleta autenticado [/user/athlete]

+ Model (application/json)

    ```js
    {
      "data": {
        "id": "1",
        "type": "athletes",
        "attributes": {
          "name": "Rafael Carvalho",
          "gender": "M",
          "birthday": "1993-08-24",
          "document": "123.123.123-12",
          "phone": "22993214823",
          "avatar": "http://placehold.it/300x300",
          "avatar-from-central": "true"
        },
        "links": {
          "self": {
            "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user"
          }
        }
      }
    }
    ```


### Ver o atleta [GET]
Retorna o atleta que está autenticado.

+ Response 200

    [Atleta][]


# Group Inscrições
Essa seção agrupa requisições do recurso **Inscrição**

## Inscrição [/user/events/{event_id}/enrollment/{?id}?include={include}]

A inscrição é o recurso que liga um atleta (ou equipe) ao evento. Porém há um recurso intermediário, chamado Entry,
pois cada atleta possui atributos próprios de sua inscrição no evento, como chip, detecções, número de peito e faixa-etária.

Em resumo, o relacionamento entre atleta e inscrição é feito da seguinte forma:

`Inscrição -> Entries -> Atletas`

+ Parameters
    + id: `1` (string) - O id da Inscrição.
    + event_id: `1` (string) - O id do Evento.
    + include: `entries.*.*,modality,category` (optional, string) - Os relacionamentos a serem incluídos.

+ Model (application/json)

    ```js
    {
      "data": {
        "id": "24772",
        "type": "enrollments",
        "attributes": {
          "chest-number": "1287",
          "category": "Bombeiros",
          "declassified": false,
          "occurrencies": {},
          "final-net-time": null,
          "final-gross-time": null,
          "final-pace-time": null,
          "occurrency-rate": 0,
          "modality-general-winner": false,
          "modality-general-final-net-time-position": null,
          "modality-general-final-gross-time-position": null,
          "modality-age-group-winner": false,
          "modality-age-group-final-net-time-position": null,
          "modality-age-group-final-gross-time-position": null,
          "category-general-winner": false,
          "category-general-final-net-time-position": null,
          "category-general-final-gross-time-position": null,
          "category-age-group-winner": false,
          "category-age-group-final-net-time-position": null,
          "category-age-group-final-gross-time-position": null,
          "kit-delivered": false
        },
        "relationships": {
          "modality": {
            "data": {
              "id": "70",
              "type": "modalities"
            }
          },
          "category": {
            "data": null
          },
          "entries": {
            "data": [
              {
                "id": "24435",
                "type": "entries"
              }
            ]
          }
        },
        "links": {
          "notifications": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications",
          "self": {
            "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772"
          }
        }
      },
      "included": [
        {
          "id": "70",
          "type": "modalities",
          "attributes": {
            "name": "Caminhada",
            "distance": 1
          },
          "relationships": {
            "categorizations": {
              "data": [
                {
                  "id": "33",
                  "type": "categorizations"
                },
                {
                  "id": "36",
                  "type": "categorizations"
                }
              ]
            }
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/modalities/70"
            }
          }
        },
        {
          "id": "24435",
          "type": "entries",
          "attributes": {
            "chest-number": "1287",
            "age-group": "20 a 28 anos"
          },
          "relationships": {
            "athlete": {
              "data": {
                "id": "1",
                "type": "athletes"
              },
              "links": {
                "self": null
              }
            }
          }
        },
        {
          "id": "1",
          "type": "athletes",
          "attributes": {
            "name": "Leandro Naves",
            "email": null,
            "birthday": "1990-05-15T08:05:07.000-03:00",
            "document": null,
            "phone": null,
            "gender": "M",
            "avatar": "http://placehold.it/300x300"
          }
        },
        {
          "id": "40",
          "type": "age-groups",
          "attributes": {
            "name": "De 2 a 2 anos",
            "pretty-age-ranges": [
              "16 a 20",
              "21 a 25",
              "26 a 30",
              "31 a 35",
              "36 a 40",
              "41 a 45"
            ]
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/modalities/40"
            }
          }
        }
      ]
    }
    ```


### Ver uma Inscrição [GET]
Retorna uma inscrição específica que o usuário tem acesso.

+ Response 200

    [Inscrição][]



## Lista de Notificações [/user/events/{event_id}/enrollments/{enrollment_id}/notifications]
Uma lista de recursos do tipo Notificação relacionados à Inscrição.

+ Parameters
    + event_id: `23` (string) - O id do Evento.
    + enrollment_id: `24772` (string) - O id da inscrição.

+ Model (application/json)

    ```js
    {
      "data": [
        {
          "id": "3",
          "type": "notifications",
          "attributes": {
            "title": "Parabéns!",
            "message": "Parabéns! Você completou os 10KM da Corrida de Reis em 00:00:00.",
            "created_at": "2016-10-28T14:05:07.000-03:00",
            "kind": "event_result",
            "image-url": "http://placehold.it/300x300"
          },
          "relationships": {
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications/3"
            }
          }
        },

        {
          "id": "2",
          "type": "notifications",
          "attributes": {
            "title": "É hoje!",
            "message": "Faltam 2h pra largada da Corrida de Reis. Já confirmou os seus dados e a sua inscrição?",
            "created_at": "2016-10-28T06:10:07.000-03:00",
            "kind": "event_reminder",
            "image-url": "http://placehold.it/300x300"
          },
          "relationships": {
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications/2"
            }
          }
        },
        {
          "id": "1",
          "type": "notifications",
          "attributes": {
            "title": "Dados inválidos",
            "message": "Verificamos que a data de nascimento 11/10/1990 pode estar incorreta. Por favor, verifique seu cadastro.",
            "created_at": "2016-10-26T16:20:07.000-03:00",
            "kind": "invalid_data",
            "image-url": "http://placehold.it/300x300"
          },
          "relationships": {
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications/1"
            }
          }
        }
      ],
      "included": [
      ],
      "links": {}
    }
    ```


### Listar Notificações de uma Inscrição [GET]


+ Response 200

    [Lista de Notificações][]

## Lista de Alterações [/user/enrollments/{enrollment_id}/versions]
Uma lista de recursos do tipo Version relacionados à Inscrição.

+ Parameters
    + enrollment_id: `40123` (string) - O id da inscrição.

+ Model (application/json)

    ```js
    {
      "data": [
        {
          "id": "3543",
            "type": "paper-trail-versions",
            "attributes": {
              "item-type": "Enrollment",
              "item-id": 40123,
              "event": "update",
              "created-at": "2016-09-12T10:36:09-03:00",
              "changes": [
              {
                "old": "#4149",
                "new": "#34873"
              }
              ],
              "title": "Mudança de número de peito",
              "change-message": "Editado por Leandro Naves",
              "kind": "chest_number"
            }
        }
      ],
      "links": {}
    }
    ```


### Listar Alterações de uma Inscrição [GET]


+ Response 200

    [Lista de Alterações][]

# Group Entries
Essa seção agrupa requisições do recurso **Entry**, que é o recurso que une o Atleta à Inscrição.

## Pedidos de transferência [/user/entries/{entry_id}/transfers]


### Criar pedido de transferência [POST]
Cria um novo pedido de transferência para aquela Entry. Ou seja, o recurso que, mediante autorização do organizador, irá trocar o atleta daquela Entry.

(TODO: Atualizar parâmetros, request e resposta.)

+ Parameters

    + name (required, string, `My Amazing App`)...Your application's name.
    + production (required, `boolean`)...If your application is set to production or not.
    + category (required, string, `Business`)...Your application's category.
    + actionCategories (optional, array, `[{"name:"My Template", type:"re.notifica.notification.Alert", actions: [{label:"Reply", type:"re.notifica.action.Callback", target:"", camera:false, keyboard:false, destructive:false}"}]`)...An array of objects that can be used as templates for messages.

+ Request (application/json)

        {
                "name":"My Amazing App",
                "production": true,
                "category": "Business"
        }


+ Response 201 (application/json; charset=utf-8)

        {
                "application":{
                                  "_id":"5245bc5b3e66a3b01f0024d4"
                              }
        }


# Group Eventos
Essa seção agrupa requisições do recurso **Evento**


## Lista de Inscrições [/user/events/{event_id}/enrollments?include={include}]
Uma lista de recursos do tipo Inscrição que o usuário tem acesso no evento.

+ Parameters
    + event_id: `1` (string) - O id do Evento.
    + include: `entries.*.*,modality,category` (string) - Os relacionamentos a serem incluídos.

+ Model (application/json)

    ```js
    {
      "data": [
        {
          "id": "24772",
          "type": "enrollments",
          "attributes": {
            "chest-number": "1287",
            "category": "Bombeiros",
            "declassified": false,
            "occurrencies": {},
            "final-net-time": null,
            "final-gross-time": null,
            "final-pace-time": null,
            "occurrency-rate": 0,
            "modality-general-winner": false,
            "modality-general-final-net-time-position": null,
            "modality-general-final-gross-time-position": null,
            "modality-age-group-winner": false,
            "modality-age-group-final-net-time-position": null,
            "modality-age-group-final-gross-time-position": null,
            "category-general-winner": false,
            "category-general-final-net-time-position": null,
            "category-general-final-gross-time-position": null,
            "category-age-group-winner": false,
            "category-age-group-final-net-time-position": null,
            "category-age-group-final-gross-time-position": null,
            "kit-delivered": false
          },
          "relationships": {
            "modality": {
              "data": {
                "id": "70",
                "type": "modalities"
              }
            },
            "category": {
              "data": null
            },
            "entries": {
              "data": [
                {
                  "id": "24435",
                  "type": "entries"
                }
              ]
            }
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772"
            }
          }
        }
      ],
      "included": [
        {
          "id": "70",
          "type": "modalities",
          "attributes": {
            "name": "Caminhada",
            "distance": 1
          },
          "relationships": {
            "categorizations": {
              "data": [
                {
                  "id": "33",
                  "type": "categorizations"
                },
                {
                  "id": "36",
                  "type": "categorizations"
                }
              ]
            }
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/modalities/70"
            }
          }
        },
        {
          "id": "24435",
          "type": "entries",
          "attributes": {
            "chest-number": "1287",
            "age-group": "20 a 28 anos"
          },
          "relationships": {
            "athlete": {
              "data": {
                "id": "1",
                "type": "athletes"
              },
              "links": {
                "self": null
              }
            }
          }
        },
        {
          "id": "1",
          "type": "athletes",
          "attributes": {
            "name": "Leandro Naves",
            "email": null,
            "birthday": "1990-05-15T08:05:07.000-03:00",
            "document": null,
            "phone": null,
            "gender": "M"
          }
        }
      ],
      "links": {}
    }
    ```


### Listar inscrições [GET]
Um usuário do tipo assessoria tem acesso a várias inscrições num mesmo evento. Portanto essa rota serve para retorna uma lista de recursos do tipo Inscrição que o usuário tem acesso no Evento.

+ Response 200

    [Lista de Inscrições][]

## Evento [/user/events/{id}?include={include}]
Evento é o recurso básico do aplicativo. Esse recurso escopado em `user` traz informações específicas do usuário naquele evento, como o campo "user-transfered-entry".

+ Parameters
    + id: `1` (string) - O id do Evento.
    + include: `modalities.*.*` (string) - Os relacionamentos a serem incluídos.

+ Model (application/json)

    ```js
    {
      "data": {
        "id": "25",
        "type": "events",
        "attributes": {
          "name": "Corrida de Exemplo",
          "starting": null,
          "address": "Rua Carlos Andrade",
          "map-url": "https://maps.googleapis.com/maps/api/staticmap?center=47.5952,-122.3316&zoom=16&size=640x400&path=weight:3%7Ccolor:blue%7Cenc:{coaHnetiVjM??_SkM??~R&key=AIzaSyA4rAT0fdTZLNkJ5o0uaAwZ89vVPQpr_Kc",
          "logo-url": "http://placehold.it/300x300",
          "user-transfered-entry": false,
          "age-calculation-criteria": "Dia da prova"
        },
        "relationships": {
          "modalities": {
            "data": [
              {
                "id": "76",
                "type": "modalities"
              },
              {
                "id": "75",
                "type": "modalities"
              }
            ]
          },
          "enrollments": {
            "links": {
              "related": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/25/enrollments"
            }
          }
        },
        "links": {
          "enrollment": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/25/enrollment/",
          "notifications": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications",
          "versions": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/versions",
          "self": {
            "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/25"
          }
        }
      },
      "included": [
        {
          "id": "76",
          "type": "modalities",
          "attributes": {
            "name": "Corrida 10km",
            "distance": 10,
            "starting-female-racing-time": "2016-08-24 08:00:00 -0300",
            "starting-male-racing-time": "2016-08-24 08:30:00 -0300",
            "award-time-type": "Tempo real",
            "age-group-award-time-type": "Tempo real",
            "awards-limit": "3",
            "age-group-awards-limit": "3",
            "age-group-cumulative-award": "Não haverá acumulação de prêmios",
            "age-calculation-criteria": "Dia da prova"
          },
          "relationships": {
            "categorizations": {
              "data": [
                {
                  "id": "44",
                  "type": "categorizations"
                },
                {
                  "id": "46",
                  "type": "categorizations"
                }
              ]
            },
            "age-group": {
              "data": {
                "id": "40",
                "type": "age-groups"
              }
            }
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/modalities/76"
            }
          }
        },
        {
          "id": "44",
          "type": "categorizations",
          "attributes": {
            "category-name": "Público Geral",
            "starting-female-racing-time": "2016-08-24 08:00:00 -0300",
            "starting-male-racing-time": "2016-08-24 08:30:00 -0300",
            "award-time-type": "Tempo real",
            "age-group-award-time-type": "Tempo real",
            "awards-limit": "3",
            "age-group-awards-limit": "3",
            "age-group-cumulative-award": "Não haverá acumulação de prêmios",
            "age-calculation-criteria": "Dia da prova"
          },
          "relationships": {
            "age-group": {
              "data": {
                "id": "40",
                "type": "age-groups"
              }
            }
          }
        },
        {
          "id": "40",
          "type": "age-groups",
          "attributes": {
            "name": "De 2 a 2 anos",
            "pretty-age-ranges": [
              "16 a 20",
              "21 a 25",
              "26 a 30",
              "31 a 35",
              "36 a 40",
              "41 a 45"
            ]
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/modalities/40"
            }
          }
        },
        {
          "id": "46",
          "type": "categorizations",
          "attributes": {
            "category-name": "Associados",
            "starting-female-racing-time": "2016-08-24 08:00:00 -0300",
            "starting-male-racing-time": "2016-08-24 08:30:00 -0300",
            "award-time-type": "Tempo real",
            "age-group-award-time-type": "Tempo real",
            "awards-limit": "3",
            "age-group-awards-limit": "3",
            "age-group-cumulative-award": "Não haverá acumulação de prêmios",
            "age-calculation-criteria": "Dia da prova"
          },
          "relationships": {
            "age-group": {
              "data": {
                "id": "40",
                "type": "age-groups"
              }
            }
          }
        },
        {
          "id": "75",
          "type": "modalities",
          "attributes": {
            "name": "Corrida 5km",
            "distance": 5,
            "starting-female-racing-time": "2016-08-24 08:00:00 -0300",
            "starting-male-racing-time": "2016-08-24 08:30:00 -0300",
            "award-time-type": "Tempo real",
            "age-group-award-time-type": "Tempo real",
            "awards-limit": "3",
            "age-group-awards-limit": "3",
            "age-group-cumulative-award": "Não haverá acumulação de prêmios",
            "age-calculation-criteria": "Dia da prova"
          },
          "relationships": {
            "categorizations": {
              "data": [
                {
                  "id": "43",
                  "type": "categorizations"
                },
                {
                  "id": "45",
                  "type": "categorizations"
                }
              ]
            },
            "age-group": {
              "data": {
                "id": "40",
                "type": "age-groups"
              }
            }
          },
          "links": {
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/modalities/75"
            }
          }
        },
        {
          "id": "43",
          "type": "categorizations",
          "attributes": {
            "category-name": "Público Geral",
            "starting-female-racing-time": "2016-08-24 08:00:00 -0300",
            "starting-male-racing-time": "2016-08-24 08:30:00 -0300",
            "award-time-type": "Tempo real",
            "age-group-award-time-type": "Tempo real",
            "awards-limit": "3",
            "age-group-awards-limit": "3",
            "age-group-cumulative-award": "Não haverá acumulação de prêmios",
            "age-calculation-criteria": "Dia da prova"
          },
          "relationships": {
            "age-group": {
              "data": {
                "id": "40",
                "type": "age-groups"
              }
            }
          }
        },
        {
          "id": "45",
          "type": "categorizations",
          "attributes": {
            "category-name": "Associados",
            "starting-female-racing-time": "2016-08-24 08:00:00 -0300",
            "starting-male-racing-time": "2016-08-24 08:30:00 -0300",
            "award-time-type": "Tempo real",
            "age-group-award-time-type": "Tempo real",
            "awards-limit": "3",
            "age-group-awards-limit": "3",
            "age-group-cumulative-award": "Não haverá acumulação de prêmios",
            "age-calculation-criteria": "Dia da prova"
          },
          "relationships": {
            "age-group": {
              "data": {
                "id": "40",
                "type": "age-groups"
              }
            }
          }
        }
      ]
    }
    ```


### Ver um Evento [GET]
Retorna um evento específico.

+ Response 200

    [Evento][]


## Lista de Eventos [/user/events]
Uma lista de recursos do tipo Evento.

+ Model (application/json)

    ```js
    {
      "data": [
        {
          "id": "35",
          "type": "events",
          "attributes": {
            "name": "12ª Corrida União Europeia",
            "starting": "2016-05-15T08:05:07.000-03:00",
            "address": "Rua Carlos Andrade",
            "map-url": "https://maps.googleapis.com/maps/api/staticmap?center=47.5952,-122.3316&zoom=16&size=640x400&path=weight:3%7Ccolor:blue%7Cenc:{coaHnetiVjM??_SkM??~R&key=AIzaSyA4rAT0fdTZLNkJ5o0uaAwZ89vVPQpr_Kc",
            "logo-url": "http://placehold.it/300x300",
            "user-transfered-entry": false
          },
          "relationships": {
            "modalities": {},
            "categorizations": {},
            "enrollments": {
              "links": {
                "related": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/35/enrollments"
              }
            }
          },
          "links": {
            "enrollment": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/35/enrollment/",
            "notifications": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications",
            "versions": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/versions",
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/35"
            }
          }
        },
        {
          "id": "23",
          "type": "events",
          "attributes": {
            "name": "Corrida de Rua (Teste CronoMax)",
            "starting": null,
            "address": null,
            "map-url": "http://maps.google.com",
            "logo-url": "http://placehold.it/300x300",
            "user-transfered-entry": false
          },
          "relationships": {
            "modalities": {},
            "categorizations": {},
            "enrollments": {
              "links": {
                "related": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments"
              }
            }
          },
          "links": {
            "enrollment": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollment/",
            "notifications": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications",
            "versions": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/versions",
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23"
            }
          }
        },
        {
          "id": "25",
          "type": "events",
          "attributes": {
            "name": "Corrida de Exemplo",
            "starting": null,
            "address": null,
            "map-url": "http://maps.google.com",
            "logo-url": "http://placehold.it/300x300",
            "user-transfered-entry": false
          },
          "relationships": {
            "modalities": {},
            "categorizations": {},
            "enrollments": {
              "links": {
                "related": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/25/enrollments"
              }
            }
          },
          "links": {
            "enrollment": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/25/enrollment/",
            "notifications": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/notifications",
            "versions": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/23/enrollments/24772/versions",
            "self": {
              "href": "http://private-5425b-brlive.apiary-mock.com/api/v3/user/events/25"
            }
          }
        }
      ],
      "links": {}
    }
    ```


### Listar eventos [GET]
Retorna uma lista de recursos do tipo Evento.

+ Response 200

    [Lista de Eventos][]



# Group Eventos - Público
Essa seção agrupa requisições para os recursos públicos associados à **Event**.


## Resultado de um atleta [/events/{event_id}/results/{id}]

+ Parameters
    + event_id: `1` (string) - O id do Evento.
    + id: `1` (string) - O id do Resultado.

+ Model (application/json)

    ```js
    {
      "data": {
        "id": "1",
        "type": "enrollments",
        "attributes": {
          "chest-number": 3,
          "final-net-time": "1:03:38",
          "final-gross-time": "1:08:47",
          "final-pace-time": "09:38",
          "modality-general-final-position": 97,
          "modality-age-group-final-position": 12,
          "category-general-final-position": 38,
          "category-age-group-final-position": 5,
          "checkpoint-times": [
            {
              "distance": 0,
              "elapsed-time": "OO:02:38",
              "partial-time": "00:00:00",
              "partial-pace": "00:00:00"
            },
            {
              "distance": 5,
              "elapsed-time": "OO:20:38",
              "partial-time": "00:18:00",
              "partial-pace": "00:04:31"
            },
            {
              "distance": 10,
              "elapsed-time": "00:51:47",
              "partial-time": "00:31:09",
              "partial-pace": "00:06:19"
            }
          ]
        },
        "relationships": {
          "athletes": {
            "data": [
              {
                "id": "1",
                "type": "athletes"
              }
            ]
          }
        }
      },
      "included": [
        {
          "id": "1",
          "type": "athletes",
          "attributes": {
            "name": "Jonh Dee",
            "email": "john@dee.com",
            "birthday": "1990-10-23",
            "document": "13232112378",
            "phone": "9999999999",
            "gender": "Masculino",
            "avatar": "http://placehold.it/300x300",
            "avatar-from-central": true
          },
          "links": {
            "self": {
              "href": "http://localhost:3000/api/v3/user/athletes/1"
            }
          }
        }
      ]
    }
    ```


### Ver resultado de um atleta [GET]
Retorna o resultado de um atleta (ou equipe) no evento.

+ Response 200

    [Resultado de um atleta][]


## Resultados do evento [/events/{event_id}/results?{filter}]

+ Parameters
    + event_id: `1` (string) - O id do Evento.
    + filter: `filter[name_eq]=Jhonny` (string) - Os filtros da requisição.

+ Model (application/json)

    ```js
    {
      "data": [
        {
          "id": "1",
          "type": "enrollments",
          "attributes": {
            "chest-number": "2387",
            "final-time": "01:03:37",
            "final-position": "13"
          },
          "relationships": {
            "athletes": {
              "data": [
                "id": "1",
                "type": "athletes"
              ]
            }
          }
        },
        {
          "id": "2",
          "type": "enrollments",
          "attributes": {
            "chest-number": "3287",
            "final-time": "01:00:28",
            "final_position": "10"
          },
          "relationships": {
            "athletes": {
              "data": [
                "id": "3",
              "type": "athletes"
              ]
            }
          }
        }
      ],
      "included": [
        {
          "id": "1",
          "type": "athletes",
          "attributes": {
            "name": "Jonh Dee",
            "email": "john@dee.com",
            "birthday": "1990-10-23",
            "document": "13232112378",
            "phone": "9999999999",
            "gender": "Masculino",
            "avatar": "http://placehold.it/300x300",
            "avatar-from-central": true
          },
          "links": {
            "self": {
              "href": "http://localhost:3000/api/v3/user/athletes/1"
            }
          }
        },
        {
          "id": "2",
          "type": "athletes",
          "attributes": {
            "name": "Paul Dee",
            "email": "paul@dee.com",
            "birthday": "1990-10-23",
            "document": "13232112378",
            "phone": "9999999999",
            "gender": "Masculino",
            "avatar": "http://placehold.it/300x300",
            "avatar-from-central": true
          },
          "links": {
            "self": {
              "href": "http://localhost:3000/api/v3/user/athletes/2"
            }
          }
        }
      ]
    }
    ```


### Ver resultados do evento [GET]
Retorna os resultados de um evento ordenados pelo tempo do atleta de forma crescente. Este endpoint aceita um parâmetro `filter` que deve ser um hash com uma ou mais das seguintes chaves:

- Modalidade `modality_id`
- Categoria `category_id`
- Gênero `gender`
- Faixa etária `age_group`
- Nome ou número de peito `name_or_chest_number`

+ Response 200

    [Resultados do evento][]


